import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable -output plugins.qmltypes QtQuick.Scene2D 2.9'

Module {
    dependencies: []
    Component {
        name: "Qt3DCore::QNode"
        prototype: "QObject"
        Enum {
            name: "PropertyTrackingMode"
            values: {
                "TrackFinalValues": 0,
                "DontTrackValues": 1,
                "TrackAllValues": 2
            }
        }
        Property { name: "parent"; type: "Qt3DCore::QNode"; isPointer: true }
        Property { name: "enabled"; type: "bool" }
        Property { name: "defaultPropertyTrackingMode"; revision: 9; type: "PropertyTrackingMode" }
        Signal {
            name: "parentChanged"
            Parameter { name: "parent"; type: "QObject"; isPointer: true }
        }
        Signal {
            name: "enabledChanged"
            Parameter { name: "enabled"; type: "bool" }
        }
        Signal {
            name: "defaultPropertyTrackingModeChanged"
            Parameter { name: "mode"; type: "PropertyTrackingMode" }
        }
        Signal { name: "nodeDestroyed" }
        Method {
            name: "setParent"
            Parameter { name: "parent"; type: "QNode"; isPointer: true }
        }
        Method {
            name: "setEnabled"
            Parameter { name: "isEnabled"; type: "bool" }
        }
        Method {
            name: "setDefaultPropertyTrackingMode"
            Parameter { name: "mode"; type: "PropertyTrackingMode" }
        }
    }
    Component {
        name: "Qt3DRender::Quick::QScene2D"
        defaultProperty: "item"
        prototype: "Qt3DCore::QNode"
        Enum {
            name: "RenderPolicy"
            values: {
                "Continuous": 0,
                "SingleShot": 1
            }
        }
        Property { name: "output"; type: "Qt3DRender::QRenderTargetOutput"; isPointer: true }
        Property { name: "source"; type: "QUrl" }
        Property { name: "renderPolicy"; type: "QScene2D::RenderPolicy" }
        Property { name: "loaded"; type: "bool"; isReadonly: true }
        Property { name: "item"; type: "QQuickItem"; isPointer: true }
        Property { name: "grabMouse"; type: "bool" }
        Signal {
            name: "outputChanged"
            Parameter { name: "output"; type: "Qt3DRender::QRenderTargetOutput"; isPointer: true }
        }
        Signal {
            name: "sourceChanged"
            Parameter { name: "url"; type: "QUrl" }
        }
        Signal {
            name: "loadedChanged"
            Parameter { name: "loaded"; type: "bool" }
        }
        Signal {
            name: "renderPolicyChanged"
            Parameter { name: "policy"; type: "QScene2D::RenderPolicy" }
        }
        Signal {
            name: "itemChanged"
            Parameter { name: "item"; type: "QQuickItem"; isPointer: true }
        }
        Signal {
            name: "grabMouseChanged"
            Parameter { name: "grab"; type: "bool" }
        }
        Method {
            name: "setOutput"
            Parameter { name: "output"; type: "Qt3DRender::QRenderTargetOutput"; isPointer: true }
        }
        Method {
            name: "setSource"
            Parameter { name: "url"; type: "QUrl" }
        }
        Method {
            name: "setRenderPolicy"
            Parameter { name: "policy"; type: "QScene2D::RenderPolicy" }
        }
        Method {
            name: "setItem"
            Parameter { name: "item"; type: "QQuickItem"; isPointer: true }
        }
        Method {
            name: "setGrabMouseEnabled"
            Parameter { name: "grab"; type: "bool" }
        }
    }
    Component {
        name: "Qt3DRender::Render::Quick::QQuick3DScene2D"
        defaultProperty: "item"
        prototype: "Qt3DRender::Quick::QScene2D"
        exports: ["QtQuick.Scene2D/Scene2D 2.9"]
        exportMetaObjectRevisions: [0]
        Property { name: "entities"; type: "Qt3DCore::QEntity"; isList: true; isReadonly: true }
    }
}
